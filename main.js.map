{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/user.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,+DAA+D,+H;;;;;;;;;;;ACA/D,4IAA4I,uBAAuB,oBAAoB,kBAAkB,0tBAA0tB,SAAS,o7B;;;;;;;;;;;;;;;;;;ACAl4B;AACd;AAO5B;IALA;QAME,WAAM,GAAG,CAAC,SAAS,EAAC,OAAO,EAAC,KAAK,CAAC,CAAC;QAEpC,cAAS,GAAG,IAAI,0CAAI,CAAC,KAAK,EAAC,WAAW,EAAC,QAAQ,EAAC,EAAE,EAAC,SAAS,EAAC,IAAI,CAAC,CAAC;IACpE,CAAC;IAJY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;OACW,YAAY,CAIxB;IAAD,mBAAC;CAAA;AAJwB;;;;;;;;;;;;;;;;;;;;;ACRiC;AACjB;AACI;AAGE;AAc/C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAZrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;aAEZ;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;ACnBtB;AAAA;AAAA;IACI,cACW,IAAY,EACZ,KAAa,EACb,KAAa,EACb,KAAa,EACb,cAAsB,EACtB,SAAkB;QALlB,SAAI,GAAJ,IAAI,CAAQ;QACZ,UAAK,GAAL,KAAK,CAAQ;QACb,UAAK,GAAL,KAAK,CAAQ;QACb,UAAK,GAAL,KAAK,CAAQ;QACb,mBAAc,GAAd,cAAc,CAAQ;QACtB,cAAS,GAAT,SAAS,CAAS;IAC3B,CAAC;IACP,WAAC;AAAD,CAAC;;;;;;;;;;;;;;ACTD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<base href=\\\"/\\\">\\n<div class=\\\"container-fluid mb-5\\\">\\n<h1>Enrollment Form</h1>\\n  <form #userForm=\\\"ngForm\\\">\\n\\n    {{userForm.value | json}}\\n    <hr />\\n    {{userModel | json}}\\n\\n    <div class=\\\"form-group\\\">\\n      <label>Name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" [ngModel]=\\\"userModel.name\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label>Email</label>\\n        <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" [ngModel]=\\\"userModel.email\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label>Phone</label>\\n      <input type=\\\"tel\\\" class=\\\"form-control\\\" name=\\\"phone\\\" [ngModel]=\\\"userModel.phone\\\">\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <select class=\\\"custom-select\\\" name=\\\"topic\\\" [ngModel]=\\\"userModel.topic\\\">\\n    <option value=\\\"\\\">I am interested in</option>\\n    <option *ngFor=\\\"let topic of topics\\\">{{ topic }}</option>\\n    </select>\\n</div>\\n\\n  <div class=\\\"mb-3\\\">\\n    <label>Time preference</label>\\n    <div class=\\\"form-check\\\">\\n      <input class=\\\"form-check-input\\\" [ngModel]=\\\"userModel.timePreference\\\" type=\\\"radio\\\" name=\\\"timePreference\\\" value=\\\"morning\\\">\\n      <label class=\\\"form-check-label\\\">Morning (9AM - 12PM)</label>\\n    </div>\\n\\n    <div class=\\\"form-check\\\">\\n      <input class=\\\"form-check-input\\\" [ngModel]=\\\"userModel.timePreference\\\" type=\\\"radio\\\" name=\\\"timePreference\\\" value=\\\"evening\\\">\\n      <label class=\\\"form-check-label\\\">Evening (5PM - 8PM)</label>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-check mb-3\\\">\\n      <input class=\\\"form-check-input\\\" name=\\\"subscribe\\\" [ngModel]=\\\"userModel.subscribe\\\" type=\\\"checkbox\\\">\\n      <label class=\\\"form-check-label\\\">Send Me The Promotional Offers</label>\\n  </div>\\n  \\n  <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Submit form</button>\\n</form>\\n</div>>\\n\"","import { Component } from '@angular/core';\nimport {User} from './user';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  topics = ['Angular','React','Vue'];\n\n userModel = new User('Rob','xyz@x.com',55252525,'','morning',true);\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class User {\n    constructor(\n        public name: string,\n        public email: string,\n        public phone: number,\n        public topic: string,\n        public timePreference: string,\n        public subscribe: boolean\n    ){}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}